# -*- coding: utf-8 -*-
"""Day2ML.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CvuaEhcUDTrjv4ZD0H0QXXpml6yc3w1J
"""

import numpy as np
a=np.array([[1,2,3,4],[4,6,8,3],[8,3,20,19],[11,2,22,21]])
m=np.reshape(a,(4,4))
print(m)
print("\nAccessing Elements")
print(a[1])
print(a[2][0])

def solution(x):
    string = str(x)
    
    if string[0] == '-':
        return int('-'+string[:0:-1])
    else:
        return int(string[::-1])
    
print(solution(-231))
print(solution(345))

# For a given sentence, return the average word length. 
# Note: Remember to remove punctuation first.

sentence1 = "Hi everyone, my name is lokesh...I am originally from india."
sentence2 = "I need to work very hard to learn more about algorithms in Python!"

def solution(sentence):
    for p in "!?',;.":
        sentence = sentence.replace(p, '')
    words = sentence.split()
    return round(sum(len(word) for word in words)/len(words),2)
    
print(solution(sentence1))
print(solution(sentence2))

# Given two non-negative integers num1 and num2 represented as string, return the sum of num1 and num2.
# You must not use any built-in BigInteger library or convert the inputs to integer directly.

#Notes:
#Both num1 and num2 contains only digits 0-9.
#Both num1 and num2 does not contain any leading zero.

num1 = '364'
num2 = '1836'

# Approach 1: 
def solution(num1,num2):
    eval(num1) + eval(num2)
    return str(eval(num1) + eval(num2))
            
print(solution(num1,num2))

#Approach2 
#Given a string of length one, the ord() function returns an integer representing the Unicode code point of the character 
#when the argument is a unicode object, or the value of the byte when the argument is an 8-bit string.

def solution(num1, num2):
    n1, n2 = 0, 0
    m1, m2 = 10**(len(num1)-1), 10**(len(num2)-1)

    for i in num1:
        n1 += (ord(i) - ord("0")) * m1 
        m1 = m1//10        

    for i in num2:
        n2 += (ord(i) - ord("0")) * m2
        m2 = m2//10

    return str(n1 + n2)
print(solution(num1, num2))

print(type(a))
print(type(b))
print(type(c))
print(type(d))
print(type(e))
print(type(f))

# Python3 program to add two numbers

n1 = input("First number: ")
n2 = input("\nSecond number: ")

# Adding two numbers
# User might also enter float numbers
sum = float(n1) + float(n2)

# Display the sum
# will print value in float
#print(sum,'is sum of',number1 ,number2 )
print('sum of ',n1, 'and',n2,'is',sum)

a=20
b=5.5
c='lokesh'
d=[20,60,5,15,20]
e=(3,5,7,9,10)
f={'name':'lokesh','age':20,'email id':"karmalkshh49@gmail.com"}

d[2]=d[2]*2

print(e)
d.append(30)
print(d)
d.insert(1,100)
print(d)

print(len(c))
print(len(d))
print(len(e))
print(len(f))
print(f.keys())
print(f.values())

a = int(input("first number a: "))
b = int(input("second number b: "))
temp=a
a=b
b=temp
print("After swapping")
print("value of a is : ", a)
print("value of b is : ", b)

z=[2,9,10,20,3,1]
z.sort(reverse=True)
print(z)

# t(function) input: (_prompt: Any = ...) -> str

d=[1,5,2,9,8]
d[1:4]

# Python program to demonstrate
# slice() operator

# List slicing
L = [1, 2, 3, 4, 5]
s1 = slice(3)
s2 = slice(1, 5, 2)
print("List slicing")
print(L[s1])
print(L[s2])

import sys as s
a=1
b=float(1)
print(s.getsizeof(a))
print(s.getsizeof(b))

import numpy as np
from matplotlib import pyplot as plt

ys = 200 + np.random.randn(100)
x = [x for x in range(len(ys))]

plt.plot(x, ys, '-')
plt.fill_between(x, ys, 195, where=(ys > 195), facecolor='g', alpha=0.6)

plt.title("Sample Visualization")
plt.show()

if(True):
  print("dekh rha hai binod kaise ..")

name=input('enter name ')
if(name=='kc'):
  print("hi")
else:
  print("sushmita")

# to check even or odd
n=int(input('enter number '))

if(n%2==0):
  print("even")
else:
  print("odd")

# Python program to find the largest number among the three input numbers

num1 = float(input("Enter first number: "))
num2 = float(input("Enter second number: "))
num3 = float(input("Enter third number: "))

if (num1 >= num2) and (num1 >= num3):
   largest = num1
elif (num2 >= num1) and (num2 >= num3):
   largest = num2
else:
   largest = num3

print("The largest number is", largest)

a = int(input('Enter first number  : '))
b = int(input('Enter second number : '))
c = int(input('Enter third number  : '))

largest = 0

if a > b and a > c :
    largest = a
elif b > c :
    largest = b
else :
    largest = c

print(largest, "is the largest of three numbers.")

def factorial(n):
	

	return 1 if (n==1 or n==0) else n * factorial(n - 1);


num = 5;
print("Factorial of",num,"is",
factorial(num))

for i in range(0,5):
  print("bye")

print("time over")